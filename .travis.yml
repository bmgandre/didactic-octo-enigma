language: c++
sudo: true
matrix:
  include:
    - os: linux
      compiler: clang
      env:
        - CONAN_ARGS='-s arch=x86_64 -s build_type=Release -s compiler=clang -s compiler.libcxx=libstdc++ -s compiler.version=3.5 --build'
        - CXX=clang++-3.5
        - CC=clang-3.5
        - CMAKE_CXX_FLAGS='-Wall -pedantic -pthread -g -O0 -fprofile-arcs -ftest-coverage'
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.5
          packages:
            - g++-4.9
            - clang-3.5
            - lcov
    - os: linux
      compiler: gcc
      env:
        - CONAN_ARGS='-s arch=x86_64 -s build_type=Release -s compiler=gcc -s compiler.libcxx=libstdc++ -s compiler.version=4.9 --build'
        - CXX=g++-4.9
        - CC=gcc-4.9
        - CMAKE_CXX_FLAGS='-Wall -pedantic -pthread -g -O0 -fprofile-arcs -ftest-coverage'
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.9
            - lcov

install:
  - "[ $CXX = g++ ] && export CXX=g++-4.9 || true"
  - "[ $CXX = clang++ ] && export CXX=clang++-3.5 || true"

before_script:
  - sudo pip install conan

script:
  - mkdir build
  - cd build
  - conan install -f ../conanfile.txt ${CONAN_ARGS}
  - cmake -DUSE_CONAN_LIBS=true ..
  - make
  - make test

after_success:
  - cd ${TRAVIS_BUILD_DIR}
  - lcov --directory . --capture --output-file coverage.info # capture coverage info
  - lcov --remove coverage.info '/usr/*' --output-file coverage.info # filter out system
  - lcov --list coverage.info #debug info
  - bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"
